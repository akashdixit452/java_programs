import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'pickingNumbers' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY a as parameter.
     */

    public static int pickingNumbers(List<Integer> a) {
    // Write your code here
    boolean visited[] = new boolean[a.size()];
    int max =0;
    Arrays.fill(visited,false);
    for(int i=0;i<a.size();i++)
        {
            if(visited[i]==true)
                continue;
            ArrayList<Integer> temp = new ArrayList<Integer>();
            temp.add(a.get(i));
            for(int j=0;j<a.size();j++){
                if(a.get(j)==a.get(i) || a.get(j)==a.get(i)+1){
                    if(j!=i)
                        temp.add(a.get(j));
                }
                   
            }
            if(temp.size()>max)
                max = temp.size();

        }
return max;
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String[] aTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> a = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int aItem = Integer.parseInt(aTemp[i]);
            a.add(aItem);
        }

        int result = Result.pickingNumbers(a);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
