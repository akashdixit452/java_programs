import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the compareTriplets function below.
    static List<Integer> compareTriplets(List<Integer> a, List<Integer> b) {
        Integer arr1[] = new Integer[a.size()];
        Integer arr2[] = new Integer[b.size()];

        arr1 = a.toArray(arr1);
        arr2 = b.toArray(arr2);
        int arr3[] = new int[2]; 

        for (int i=0; i<arr1.length; i++){
            for (int j=i; j<arr2.length; j++ ) {
                if(arr1[i]>arr2[j]) 
                {
                    arr3[0]=arr3[0]+1;
                }
                else if(arr1[i]<arr2[j])
                {
                    arr3[1]= arr3[1]+1;
                }
                else{
                    //
                }
                
                break;
            
            }
        
        }
        
        List<Integer> list = Arrays.stream(arr3).boxed().collect(Collectors.toList());

      
    return list;
    }
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> b = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> result = compareTriplets(a, b);

        bufferedWriter.write( 
            result.stream()
                .map(Object::toString)
                .collect(joining(" "))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
